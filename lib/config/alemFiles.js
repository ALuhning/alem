const path = require("path");
const { process_file, removeComments } = require("../parse");
const { for_rfile } = require("../utils");
const { ALEM_VM_FOLDER } = require("../constants");
const importableAlemFileSchemas = require("./importableAlemFileSchemas");
const plugins = require("../../plugins");
const { read_alem_config } = require("../config");
const getProjectName = require("../actions/getProjectName");

const loadHeaderFilesContent = async () => {
  // State
  let bundleFileBody = process_file(
    path.join(__dirname, "../", ALEM_VM_FOLDER, "state.ts"),
  );

  // Remove comentÃ¡rios do state.ts processado
  bundleFileBody = removeComments(bundleFileBody);

  // Load .CSS files
  // Loop through all .css files inside the './src' and get their content
  bundleFileBody += "const alemCssBody = `";
  for_rfile(path.join(".", "src"), ["css", "sass"], (file) => {
    // Skip files if they need to be ignored
    if (!plugins.ignoreCssFiles.includes(file)) {
      const fileBody = process_file(file);
      bundleFileBody += fileBody;
    }
  });
  // CSS content generated by plugins
  const cssFromPlugins = await plugins.css();
  bundleFileBody += cssFromPlugins;

  // Closes the css content
  bundleFileBody += "`;";

  // Theme
  const alemThemeContent = process_file(
    path.join(__dirname, "../", ALEM_VM_FOLDER, "components", "AlemTheme.jsx"),
  );

  bundleFileBody += removeComments(alemThemeContent);

  return bundleFileBody;
};

/**
 * Criar o indexador do projeto
 * @returns
 */
const loadIndexerContent = (network) => {
  const config = read_alem_config();
  const account =
    network === "mainnet" ? config.mainnetAccount : config.testnetAccount;
  const ejectStatefulComponents = config.options?.ejectStatefulComponents;

  let appIndexer = process_file(
    path.join(
      __dirname,
      "../",
      ALEM_VM_FOLDER,
      "components",
      ejectStatefulComponents ? "AppSrcIndexer.jsx" : "AppIndexer.jsx",
    ),
  );

  // Insere o src do App
  if (ejectStatefulComponents) {
    const widgetName = `${getProjectName(true)}.App`;
    appIndexer = appIndexer.replace(
      "APP_INDEXER_WIDGET_SRC",
      `${account}/widget/${widgetName}`,
    );
  }

  return removeComments(appIndexer);
};

module.exports = {
  importableAlemFileSchemas,
  loadHeaderFilesContent,
  loadIndexerContent,
};
